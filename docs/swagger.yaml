basePath: /
definitions:
  models.Profile:
    properties:
      age:
        type: integer
      country:
        type: string
      full_name:
        type: string
      image:
        type: string
    type: object
  models.User:
    description: User model request information
    properties:
      email:
        type: string
      id:
        type: string
      password:
        type: string
      profile:
        $ref: '#/definitions/models.Profile'
      roles:
        items:
          type: string
        type: array
      status:
        type: integer
    required:
    - email
    - password
    type: object
  models.UserLogin:
    description: Signin model request information
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  responses.SigninResponse:
    description: Signin model response information
    properties:
      token:
        description: this is the generated token
        type: string
      user:
        $ref: '#/definitions/models.User'
        description: this is the user that  has been signed in
    type: object
  responses.UserResponse:
    description: User account information
    properties:
      data:
        description: this is the status of the response
      message:
        description: this is the message of the response
        type: string
      status:
        description: this is the status of the response
        type: integer
    type: object
  utils.JError:
    description: Error model response information
    properties:
      error:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: This is a microservice for the user´s management
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fiber User Microservice API
  version: "1.0"
paths:
  /signin:
    post:
      consumes:
      - application/json
      description: Signin an user .
      parameters:
      - description: The signin object
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  $ref: '#/definitions/responses.SigninResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  $ref: '#/definitions/utils.JError'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  $ref: '#/definitions/utils.JError'
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  $ref: '#/definitions/utils.JError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  $ref: '#/definitions/utils.JError'
              type: object
      summary: Signin.
  /signup:
    post:
      consumes:
      - application/json
      description: Register an user .
      parameters:
      - description: The user object to be registered
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  $ref: '#/definitions/utils.JError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  $ref: '#/definitions/utils.JError'
              type: object
      summary: Register an user.
  /users:
    get:
      description: Get a list of all users.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.User'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  $ref: '#/definitions/utils.JError'
              type: object
      summary: Show a list of all users.
    post:
      consumes:
      - application/json
      description: Create an user .
      parameters:
      - description: The user object to be created
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  $ref: '#/definitions/utils.JError'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  $ref: '#/definitions/utils.JError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  $ref: '#/definitions/utils.JError'
              type: object
      summary: Create an user.
  /users/{id}:
    delete:
      description: Delete an user by it´s ID.
      parameters:
      - description: The user ID to be deleted
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  $ref: '#/definitions/utils.JError'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  $ref: '#/definitions/utils.JError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  $ref: '#/definitions/utils.JError'
              type: object
      summary: Delete an user.
    get:
      description: Get an user by it´s ID.
      parameters:
      - description: The user ID to be showed
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.User'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  $ref: '#/definitions/utils.JError'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  $ref: '#/definitions/utils.JError'
              type: object
      summary: Show an user.
    put:
      description: Edit an user by it´s ID.
      parameters:
      - description: The user ID to be edited
        in: path
        name: id
        required: true
        type: string
      - description: The user object with the new values
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.User'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  $ref: '#/definitions/utils.JError'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  $ref: '#/definitions/utils.JError'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  $ref: '#/definitions/utils.JError'
              type: object
      summary: Edit an user.
swagger: "2.0"
